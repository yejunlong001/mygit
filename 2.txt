<template>
  <div class="csk">
    <el-row>
      <el-col :span="24" style="margin-bottom:10px;">
        <span style="font-weight:bold;font-size:14px;padding:0 0 0 10px;">查询条件</span>
      </el-col>
    </el-row>
    <el-form label-width="110px">
      <el-row>
        <el-col :span="8">
          <el-form-item label="管理方编号">
            <el-input v-model="comAdminCode" style="width:100%;" placeholder="请输入" size="small"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="8">
          <el-form-item label="管理方名称">
            <el-input v-model="comAdminName" style="width:100%;" placeholder="请输入" size="small"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="8">
          <el-form-item label="管理方状态">
            <el-select
              v-model="Status"
              clearable
              filterable
              placeholder="请选择管理方状态"
              size="small"
              style="width:100%;">
              <el-option
                v-for="item in StatusTab"
                :key="item.enumValue"
                :label="item.cnText"
                :value="item.enumValue"
              />
            </el-select>
          </el-form-item>
        </el-col>
      </el-row>
      <el-row>
        <el-col :span="24" align="right">
          <el-button size="small" @click="reset">重置</el-button>
          <el-button type="primary" size="small" @click="search">搜索管理方</el-button>
        </el-col>
      </el-row>
    </el-form>
    <el-row>
      <el-col :span="24" align="right">
        <div class="mergeBtn">
          <el-button @click="mergeComAdmin" type="primary" size="small">合并管理方</el-button>
        </div>
      </el-col>
    </el-row>
    <el-row>
      <el-col :span="10">
        <div class="leftBox">
          <div class="mytitle">管理方列表</div>
          <div class="myTable">
            <el-table ref="multipleTable" @selection-change="handleSelectionChange" :data="list" stripe border :header-cell-style="{background:'#fafafa'}">
              <el-table-column type="selection" width="55" align="center" ></el-table-column>
              <el-table-column label="管理方编号" prop="comAdminCode" align="center"></el-table-column>
              <el-table-column label="管理方名称" prop="comAdminName" align="center" show-overflow-tooltip></el-table-column>
            </el-table>
          </div>
        </div>
      </el-col>
      <el-col :span="4" align="center">
        <el-button class="addBtn" @click="addBtn" :type="addBtnType" size="medium" round>添加到右边<i class="el-icon-arrow-right"></i></el-button>
      </el-col>
      <el-col :span="10">
        <div class="rightBox">
          <div class="mytitle">需要合并的列表 (共 {{resultList.length}} 个)</div>
          <div class="myTable">
            <el-table @selection-change="handleSelectionChange" :data="resultList" stripe border :header-cell-style="{background:'#fafafa'}">
              <el-table-column label="设置主管理方" prop="comAdminCode" align="center">
                <template slot-scope="scope">
                  <el-switch :disabled="scope.row.disabled" @change="swichChange(scope.row)" active-text="主"  v-model="scope.row.flag"></el-switch>
                </template>
              </el-table-column>
              <el-table-column label="管理方名称" prop="comAdminName" align="center" show-overflow-tooltip></el-table-column>
              <el-table-column label="操作" prop="comAdminName" align="center">
                <template slot-scope="scope">
                  <el-button size="mini" @click="deleteBtn(scope.row)">移除</el-button>
                </template>
              </el-table-column>
            </el-table>
            <!-- {{IDs}}
            --------
            {{mainID}} -->
          </div>
        </div>
      </el-col>
    </el-row>
    <el-row>
      <div class="pageNo">
       <span>
        <el-pagination
          @current-change="handleCurrentChange"
          :current-page="currentPage"
          :page-size="pageSize"
          layout="total,prev, pager, next, jumper"
          :total="total">
        </el-pagination>
        </span>
      </div>
    </el-row>
    <!-- <h1>{{resultList.length}}</h1>
    {{resultList}} -->
  </div>
</template>
<script>
import api from "../../../serve/api/SalesCenterApi";
export default {
  data() {
    return {
      comAdminCode: "",
      comAdminName: "",
      StatusTab: [],
      Status: "",
      checkedLeftAll:false,
      list:[],
      currentPage:1,
      pageSize:10,
      total:0,
      isDisabled:false,
      switchValue:true,
      addBtnType:"primary",
      resultList:[],  //这个是最后选中的结果，最终提交的数据集合
      resultListBox:[],  //这个是暂存区
      selectionArr:[], //这个是复选框选中的数据
      IDs:[], //得到所有选中的id
      mainID:'' //这个是主id
    };
  },
  created() {
    this.getInit();
    this.comadminList();
    this.addBtnStyle();
  },
  methods: {
    getInit() {
      api.ComAdminGetInit().then(res => {
        if (res.code === 0) {
          this.StatusTab = res.result.dataSources.status;
        }
      });
    },
    comadminList() {
      var params = {
        name: this.comAdminName,
        code: this.comAdminCode,
        status: this.Status,
        pageIndex: this.pageIndex,
        pageSize: this.pageSize
      };
      api.ComAdminList(params).then(res => {
        let { results ,total } = res.result;
        this.total = total;
        this.list = results;
        this.isSelect(); //勾住数据回显
      });
    },
    //搜索
    search(){
      this.comadminList();
    },
    reset(){
      this.comAdminCode = '';
      this.comAdminName = '';
      this.Status = '';
      this.pageIndex = 1;
      this.comadminList();
    },
    //复选框事件
    handleSelectionChange(selection){
      this.selectionArr = selection;  //这个是当前页被选中的数据
      this.addBtnStyle(); //设置添加按钮的颜色
      let resMap = new Map();  //定义一个map对象用来存储所有被选中的数据
      this.resultList.forEach(item=> { resMap.set(item.comAdminId , item) });   //先把已经选中的或者后端返回的数据存到map对象
      selection.forEach(item=> { resMap.set(item.comAdminId , item) });   //再把当前页面选中的数据存到map对象
      let selectIds = selection.map( item => ( item.comAdminId )); //帅选出当前页面被选中的数据的[id]
      let pageIds = this.list.filter(item => {  //然后推算出获取当前页面没有被选中的[id]**重点
        if(selectIds.indexOf(item.comAdminId) == -1){
          return item;
        };
      }); 
      pageIds.forEach(item =>{  //此时去删除被取消的那些数据
        resMap.delete( item.comAdminId );
      });
      let arr = [];
      resMap.forEach(item =>{
        arr.push(item);
      });
      this.resultListBox = arr;
    },
    addBtn(){
      this.resultList = this.resultListBox;
      if(this.resultList.length != 0){
         this.resultList.forEach(item => {
          this.$set(item, "flag" , false);
          this.$set(item, "disabled", false);
        });
      };
      if(this.selectionArr.length == 0){
        this.$message({type:'error',message:'请先勾选数据'});
      };
    },
    //按钮样式初始化
    addBtnStyle(){
      let { selectionArr } = this;
      if(selectionArr.length == 0){
        this.addBtnType = '';
      }else{
        this.addBtnType = 'primary';
      };
    },
    //移除
    deleteBtn(row){
      //先判断当前是否已经设置为主管理方
      let rowId = row.comAdminId;
      let rowData = this.resultList.filter(item =>{ if(item.comAdminId == rowId){ return item } });
      if( rowData[0].flag == true){
        this.$message({type:'error',message:'移除前请先取消“设置主管理方”操作'});
        return;
      };
      let crr = [];
      this.resultList.forEach(item => {
        if(row.comAdminId != item.comAdminId){
          crr.push(item);
        };
      })
      this.resultList = crr; //这是删除后的数据
      this.$refs.multipleTable.clearSelection(); //先清除所有勾选
      this.isSelect(); //再执行勾选住需要选中的数据
    },
    //勾选数据回显
    isSelect(){
      let arr = this.resultList.map(item => (item.comAdminId)); //筛选出已经选好的id
      let brr = this.list.filter(item => { //一定要先匹配对应得数据才能回显勾住
        if(arr.indexOf(item.comAdminId) > -1){
          return item;
        };
      });
      this.$nextTick(()=>{
        brr.forEach( item => { //开始数据回显勾住
          this.$refs.multipleTable.toggleRowSelection(item , true);
        });
      });
    },
    handleCurrentChange(val){
      this.pageIndex = val;
      this.comadminList();
    },
    //合并管理方
    mergeComAdmin(){
      if(this.resultList.length < 2){
        this.$message({type:'error',message:'请至少选择两条或两条以上数据才能合并'});
        return;
      };
      let a = [];
      let b = '';
      this.resultList.forEach(item => {
        if(item.flag == false){
          a.push(item.comAdminId);
        }else{
          b = item.comAdminId;
        };
      });
      if(!b){
        this.$message({type:'error',message:'请先设置主管理方'});
        return;
      };
      this.IDs = a;
      this.mainID = b;
      let params = {
        ComAdminIds: this.IDs,
        ComAdminIdTarget: this.mainID
      };
      return;
      api.ComAdminMerge(params).then(res=>{
        if(res.result == true){
          this.$notify({type:'success',message:'合并成功'});
          this.resultList = [];
          this.reset();
        }else{
          this.$notify({type:'error',message:'合并失败'});
        };
      });
    },
    //Switch开关事件
    swichChange(e){
      if(e.flag == true){
        this.resultList.forEach(item =>{
          if(item.comAdminId != e.comAdminId){
            item.disabled = true;
          };
        });
      }else if(e.flag == false){
        this.resultList.forEach(item =>{
          item.disabled = false;
        });
      };
    },
  },
};
</script>
<style lang="less" scoped>
@import "../../../assets/less/addpreson.less";
.csk{
  background:#fff;padding:15px 15px 15px 15px;
  .leftBox {
    border: 1px #ebeef5 solid;
    height: 591px;
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    margin-top: 20px;
  }
  .rightBox {
    border: 1px #ebeef5 solid;
    height: 591px;
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    margin-top: 20px;
    overflow-y: auto;
  }
  .mytitle{
    background: #f5f7fa;
    color: #666;
    padding: 10px;
    border-bottom: 1px #ebeef5 solid;
    font-size: 14px;
  }
  .myTable{
    padding:10px;
  }
  .mergeBtn{
    border-top: 1px #eee solid;
    padding-top: 20px;
    margin-top: 20px;
  }
  .pageNo{
    text-align: center;
    padding-top: 20px;
    padding-bottom: 30px;
    span{
      display: inline-block;
    }
  }
  .addBtn{
    margin-top: 280px;
  }
}
</style>
