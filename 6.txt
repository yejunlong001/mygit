<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <title>搜索功能</title>
    <script src="https://cdn.bootcss.com/jquery/1.9.1/jquery.js"></script>
</head>
<body>

<input type="text"  class="searchInput">
<ul class="searchResult"><span></span></ul>

<script type="text/javascript">

//搜索开始
var flagSearch = true;  // 初始flag为true，用于非中文字符的输入
$('.searchInput').on('compositionstart', function (){ // 绑定compositionstart事件
    flagSearch = false;
});
$('.searchInput').on('compositionend', function (){  // 绑定compositionend事件
    flagSearch = true;
});
$('.searchInput').on('input', function (e){ // 绑定指定事件
    setTimeout(function(){ // 这里为了防止事件 的先后顺序出错，给一个延时
        if(flagSearch){
           search(e); //调用搜索
        };
    },0);
});
//开始搜索
function search(e){
	var options = [
	  {name:'北京',href:'www.a.com'},
	  {name:'中智',href:'www.a.com'},
	  {name:'中国',href:'www.a.com'},
	  {name:'中方',href:'www.a.com'},
	  {name:'中方几百',href:'www.a.com'},
	  {name:'上海',href:'www.a.com'},
	  {name:'百中汇',href:'www.a.com'},
	  {name:'乌鲁木齐',href:'www.a.com'},
	  {name:'乌干达',href:'www.a.com'},
	  {name:'乌小红',href:'www.a.com'},
	];
    var str = e.target.value; //输入值
    console.log(str);
    var arr = []; //提炼出中文
    for(var i=0;i<options.length;i++){
      arr.push(options[i].name);
    };
    var brr = []; //拆分中文
    for(var j=0;j<arr.length;j++){
      var letters = arr[j].split('');
      brr.push(letters);
    };
    console.log("brr",brr);
    var crr = []; //对拆分后的中文进行排列组合
    for(var a=0;a<brr.length;a++){
       crr.push(paiLieZuHe(brr[a], index=0, result=[]));
    };
    //排列组合 [a,b,c,d]
    function paiLieZuHe(source, index=0, result=[]){
      var kong = [];
          kong.push(source[index]); //kong里面永远只会仅有一个元素，长度为1
      for(var n=0;n<result.length;n++){
      	kong.push( result[n] + source[index] ); //每次只拿出一个和result组合拼接
      };
      for(var s=0;s<kong.length;s++){
      	result.push(kong[s]);   //组合完之后就push到result
      };
      index++;
      if(index < source.length){
      	paiLieZuHe(source , index , result);
      };
      return result;
    };
    console.log("crr",crr);
    //搜索中文-匹配中文
    var drr = [];
    for(var k=0;k<crr.length;k++){
      var flag = crr[k].indexOf(str);
      if(flag != -1){
      	drr.push(crr[k]);
      };
    };
    console.log("drr",drr);
    //提取最后一个中文词组
    var err = [];
    for(var q=0;q<drr.length;q++){
    	var len = drr[q].length;
        var obj = drr[q][len-1];
        err.push(obj);
    };
    console.log("err",err);
    //开始匹配原数组,去匹配链接
    var frr = []; 
    for(var f=0;f<err.length;f++){
      for(var m=0;m<options.length;m++){
        if(err[f] == options[m].name){
		  frr.push(options[m]);
		};
      };
    };
    console.log("frr",frr);
    //生成html
    var html = '';
    for(var p=0;p<frr.length;p++){
       html = html + '<li><a href="'+frr[p].href+'">'+frr[p].name+'</a></li>' + '\n';
    };
    $('.searchResult').empty(); //先清除被选元素的所有子节点
    $('.searchResult').append(html);  //再插入到html
};

		
	
</script>
</body>
</html>
